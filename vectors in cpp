#include<bits/stdc++.h>
using namespace std;
int main()
{
	/*vector<int>v;
	v.push_back(20);
	v.push_back(40);
	v.emplace_back(10);
	v.emplace_back(30);
	v.emplace_back(90);
	for(int i=0;i<v.size();i++){
		cout<<v[i]<<" ";
	}
	cout<<"\n";
	v.pop_back();
	//ways to print vector
	for(vector<int>::iterator it=v.begin();it!=v.end();it++){
		cout<<*(it)<<" ";
	}
	cout<<endl;
	for(auto it=v.rbegin();it!=v.rend();it++){
		cout<<*(it)<<" ";
	}
	//erase funtion
	v.erase(v.begin());
	//v.erase(v.begin()+1);
	cout<<"\n";
	for(int i=0;i<v.size();i++){
		cout<<v[i]<<" ";
	}
	cout<<"\n";
	//insert funtion(to insert at any position)
	v.insert(v.begin(),4);
	v.insert(v.begin(),3,6);
	vector<int>vet(2,20);
	v.insert(v.begin(),vet.begin(),vet.end());
	for(int i=0;i<v.size();i++){
		cout<<v[i]<<" ";
	}
	cout<<"\n";
	vector<int>v1;
	vector<int>v2;
	v1.push_back(20);
	v1.push_back(40);
	v2.emplace_back(10);
	v2.emplace_back(30);
	v1.swap(v2);
	for(vector<int>::iterator it=v1.begin();it!=v1.end();it++){
		cout<<*(it)<<" ";
	}
	cout<<"\n";
	for(vector<int>::iterator it=v2.begin();it!=v2.end();it++){
		cout<<*(it)<<" ";
	}
	cout<<"\n";
	//v.clear();
	//cout<<v.empty();*/



	/*MATRIX	
	vector<vector<int>>mat={{1,2,3},{4,5,6},{7,8,9}};
	for(int i=0;i<mat.size();i++){
		for(int j=0;j<mat[i].size();j++){
			cout<<mat[i][j]<<" ";
		}
		cout<<"\n";
	}*/


    /* PAIR
	
    pair<int,char>p(1,'s');//both can be same or different data types
	cout<<p.first<<"\n";
	cout<<p.second;*/

// VEECTOR-PAIR
	/*vector<pair<int,int>>v;//push is only working
	v.push_back({10,20});
	v.push_back({30,40});
	for(auto it:v){
		cout<<it.first<<" "<<it.second<<"\n";
	}*/

	vector<pair<int,pair<int,int>>>v={{1,{0,4}}};
	for(auto it:v){
		cout<<it.first<<"\n"<<it.second.first<<" "<<it.second.second;
	}
}
